version: '3.8'

services:
  api_gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GOLANG_BACKEND_URL=http://golang_backend:8081
      - PYTHON_LLM_SERVICE_URL=http://python_llm_service:8000
      - ACTION_EXECUTOR_URL=http://action_executor:8082
      - CODE_EXECUTION_ENGINE_URL=http://code_execution_engine:8083
    depends_on:
      - golang_backend
      - python_llm_service
      - action_executor
      - code_execution_engine
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped

  golang_backend:
    build:
      context: ./golang_backend
      dockerfile: Dockerfile
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-devlm}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped

  python_llm_service:
    build:
      context: ./python_llm_service
      dockerfile: Dockerfile
    environment:
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - POSTGRES_URL=postgres://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-devlm}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MAX_CONCURRENT_REQUESTS=${MAX_CONCURRENT_REQUESTS:-10}
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped

  action_executor:
    build:
      context: ./action_executor
      dockerfile: Dockerfile
    environment:
      - SEARCH_API_KEY=${SEARCH_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MAX_CONCURRENT_ACTIONS=${MAX_CONCURRENT_ACTIONS:-5}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped

  code_execution_engine:
    build:
      context: ./code_execution_engine
      dockerfile: Dockerfile
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - MAX_EXECUTION_TIME=${MAX_EXECUTION_TIME:-30s}
      - MAX_MEMORY=${MAX_MEMORY:-512m}
      - MAX_CPU=${MAX_CPU:-1.0}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - SUPPORTED_LANGUAGES=${SUPPORTED_LANGUAGES:-python,go,javascript}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-devlm}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-devlm}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: devlm_network
    driver: bridge